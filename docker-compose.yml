version: "3.9"
services:
  db:
    image: postgres:15
    environment:
      POSTGRES_USER: ide
      POSTGRES_PASSWORD: ide
      POSTGRES_DB: ide
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
  backend:
    build: ./backend
    environment:
      DATABASE_URL: postgresql+asyncpg://ide:ide@db:5432/ide
      REDIS_URL: redis://redis:6379/0
      JWT_SECRET: dev-secret
      ADMIN_EMAIL: admin@example.com
      ADMIN_PASSWORD: adminpass
    depends_on:
      - db
      - redis
    ports:
      - "8000:8000"
  worker:
    build: ./backend
    command: ["./entrypoint.sh", "python", "-m", "app.worker.consumer"]
    environment:
      DATABASE_URL: postgresql+asyncpg://ide:ide@db:5432/ide
      REDIS_URL: redis://redis:6379/0
      JWT_SECRET: dev-secret
    # No admin vars here to avoid duplicate creation attempt
    depends_on:
      - db
      - redis
  runner:
    image: python:3.12-slim
    working_dir: /work
    volumes:
      - .:/work:ro
    entrypoint: ["sleep", "infinity"]
  frontend:
    image: node:20-alpine
    working_dir: /app
    volumes:
      - ./frontend:/app
    environment:
      VITE_API_BASE: http://backend:8000/api
      VITE_WS_BASE: ws://backend:8000/api
    command: ["sh", "-c", "npm install && npm run dev -- --host 0.0.0.0"]
    ports:
      - "5173:5173"
    depends_on:
      - backend
volumes:
  pgdata:
